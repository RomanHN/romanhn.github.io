[{"content":"multi-factor authentication When you sign into an online service, you\u0026rsquo;re required to provide a username to identify who you are and a password to prove that you are who you say you are. Anyone can claim that they\u0026rsquo;re romanhn on GitHub, but only I know my GitHub password. But if a hacker breaches GitHub\u0026rsquo;s servers and publishes a list of everyone\u0026rsquo;s password,1 knowing my password is no longer proof of anything. This is the motivation behind two- or multi-factor authentication (MFA): to access my GitHub account, not only would you have to know my password, but you\u0026rsquo;d need to authenticate yourself using an additional factor, like tapping a notification on my phone.\nadapted from sketchplanations\nI\u0026rsquo;ll use the \u0026ldquo;Swiss cheese model\u0026rdquo;, shown above, to explain how multi-factor authentication provides security through redundancy. If a hacker can bypass one hole (knows my password) they have to find a hole in another layer (get me to tap the notification) in order to hack my account.\ncategories of factors A user can use any of three categories of factors to authenticate themself:2\nA piece of information only they know, like a password or PIN. A physical object only they possess, like a key or security token. A physical characteristic only they display, like a fingerprint or voice pattern. Each layer should be a different category because different factors in the same category are often breached simultaneously, as if they were sliced from the same section of the cheese block so their holes were in similar places. For example, if I fell victim to a phishing attack, the hacker would discover all the \u0026ldquo;pieces of information only I know\u0026rdquo; in one fell swoop. Asking the hacker \u0026ldquo;what was the name of your first pet?\u0026rdquo; doesn\u0026rsquo;t provide any additional security if they discovered my password and my first pet\u0026rsquo;s name at the same time.\nThis is the same idea behind the 3-2-1 rule for backing up data.\nYou should maintain three copies of anything you care about: two copies in different formats and one off-site backup.\nLike with authentication, redundancy in backups is best when it is spread across different modalities. Instead of protecting against a phishing attack, however, it prevents a house fire from wiping out your baby photo collection because you never stored a copy in the cloud.\nthe problem with MFA While MFA makes it harder for a hacker to breach an account, it also makes it easier for a legitimate user to get locked out. People lose their cell phones and biometric sensors fail, all the time. And this matters because getting locked out is often worse than your account being hacked – I would rather let a hacker download all of the data in my Google Photos account than lose access to it permanently.\nSuppose that a laptop can be accessed using three authentication factors (entering a password, confirming via an SMS text, and scanning a fingerprint), and they each have false positive (hacker successfully bypasses) and false negative (a user fails to pass) rates of 1%. Different multi-factor authentication schemes combining these factors have new rates, as shown by the confusion matrices below.3\nonly password required user access granted access denied legitimate 99.00% 1.00% hacker 1.00% 99.00% password and SMS required user access granted access denied legitimate 98.01% 1.99% hacker 0.01% 99.99% password, SMS, and fingerprint required user access granted access denied legitimate ~97.03% ~2.97% hacker 0.0001% 99.9999% With each additional factor, the chance that a hacker could successfully break in decreases exponentially (1% -\u0026gt; 0.01% -\u0026gt; 0.001%). However, the chance that a legitimate user gets locked out increases ~linearly (1% -\u0026gt; 1.99% -\u0026gt; ~2.97%). The probability that \u0026ldquo;something bad happens\u0026rdquo; is actually greater when three factors are required instead of two.4\nthe 2/3 rule To combat against false negatives and false positives simultaneously, I propose the \u0026ldquo;2/3 rule\u0026rdquo; for multi-factor authentication:\nA system should have in place three methods, in different modalities, for authenticating a legitimate user. The user is granted access to the system as long as they can pass at least two out of the three methods.5\nThis provides redundancy on both fronts: a malicious actor must crack at least two methods to breach an account, and a legitimate user must fail at least two methods to be locked out. It\u0026rsquo;s like a castle with a moat and cannons to thwart invaders, as well as guardrails and nets to prevent the king from falling into the moat.\nThe confusion matrix for this combination demonstrates how the 2/3 strategy provides symmetric redundancy:\nat least two of password, TOTP, or fingerprint user access granted access denied legitimate ~99.97% ~0.03% hacker ~0.03% ~99.97% While the chance that a hacker breaks into a 2/3 system is higher than the original 2- or 3-factor systems (~0.03% \u0026gt; 0.01% \u0026gt; 0.0001%), the chance that a user gets locked out is dramatically lower, even more so than the 1-factor system (0.03% \u0026lt; 1.00%). This means that the overall chance of being hacked or locked out is lower than any other system.\nthis is nothing new That being said, this strategy is already in use; I just wanted to give a name to it. For example, if you have 2-factor authentication enabled on your Google or Facebook accounts, they will allow you to receive a code from a text message in case you don\u0026rsquo;t have your TOTP generator on you.\nOkay, a more realistic situation is \u0026ldquo;a hacker breaches GitHub\u0026rsquo;s servers, downloads a list of everyone\u0026rsquo;s password hashes, cracks the easiest ones, and sells the list to another hacker on some forum\u0026rdquo;, but the same idea holds.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nThere are other categories like \u0026ldquo;somewhere you are\u0026rdquo;, which is measured by the user\u0026rsquo;s IP address at the time of login.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nThe probability that a legitimate user is denied access is $1-0.99^n$ , where $n$ is the number of factors required. Similarly, the probability that a hacker is granted access is $0.01^n$ . This model becomes more complicated if different factors have different false positive/negative rates or are combined in different ways (for example, one scheme could require either a password or a fingerprint).\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nThis explicitly assumes that any given login attempt has an equal chance of being malicious or legitimate, and it implicitly assumes that the \u0026ldquo;hacked\u0026rdquo; and \u0026ldquo;locked out\u0026rdquo; events are equally bad. Neither of these assumptions are true for most systems.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nUsing the fourth category of authentication factors \u0026ldquo;location\u0026rdquo;, one could implement a \u0026ldquo;2/4\u0026rdquo; or \u0026ldquo;3/4\u0026rdquo; strategy.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","permalink":"https://roman.computer/mfa/","summary":"multi-factor authentication When you sign into an online service, you\u0026rsquo;re required to provide a username to identify who you are and a password to prove that you are who you say you are. Anyone can claim that they\u0026rsquo;re romanhn on GitHub, but only I know my GitHub password. But if a hacker breaches GitHub\u0026rsquo;s servers and publishes a list of everyone\u0026rsquo;s password,1 knowing my password is no longer proof of anything.","title":"the 2/3 rule for multi-factor authentication"},{"content":"Isn\u0026rsquo;t the internet such a magically useful tool? Thirty years ago, if you wanted to know how many plays Shakespeare wrote, you would have to physically walk to your local library and find a relevant book. Now, you can find the answer in less than ten seconds, at any time, wherever you are.\nHowever, the internet is not a truthful, superintelligent oracle. Rather, it\u0026rsquo;s a dangerous jungle of knowledge you must learn to navigate if you wish to find the truth. Good information is censored, hidden behind paywalls or within piles of spam, and difficult to differentiate from untrustworthy information. This post won\u0026rsquo;t be a complete guide on how to navigate the world wide web of knowledge, but it will give you some tools I\u0026rsquo;ve discovered over the years that you can throw in your digital rucksack to aid your journey.\nsearch engines The great internet sage Gwern Branwen wrote an advanced guide on finding ref­er­ences, pa­pers, and books on­line. The search engines Brave Search and Kagi have the features \u0026ldquo;Goggles\u0026rdquo; and \u0026ldquo;Lenses\u0026rdquo; respectively, which are presets that filter or re-rank entire categories of websites in your results. Blog Surf is a search engine for posts from manually approved personal blogs and newsletters. SearXNG is a highly customizable internet metasearch engine. Perplexity uses natural language processing to answer your query with a paragraph (with sources) and allows you to ask followup questions. Metaphor allows you to find websites by writing creative and long-form prompts, also using NLP. Elicit is a research assistant that helps you find relevant research papers, also using NLP. bypassing restrictions Sometimes you know exactly where to find a piece of information, but it\u0026rsquo;s locked behind a paywall or deleted from the internet.\nUnddit displays deleted comments and posts on Reddit. Internet Archive is a non-profit library of free books, movies, websites, et cetera. It\u0026rsquo;s famous for the Wayback Machine, which displays past archived snapshots of a given URL. Bypass Paywalls is a browser extension to help bypass paywalls on selected sites. The subreddit r/piracy has a wiki with loads of resources on obtaining copyrighted material for free. Anna\u0026rsquo;s Archive is a shadow library metasearch engine that aggregates results from websites that host copyrighted books, academic papers, magazines, et cetera. trustworthy sources It is particularly frustrating to find trustworthy knowledge about certain topics because of misaligned incentives: researching which product to buy or which supplements actually work is hard because everyone\u0026rsquo;s trying to sell you something.\nConsumer Reports independently tests consumer products and gives in-depth recommendations. It does not rely on affiliate commissions. Examine is a database of research about nutrition and supplements that has no industry ties, sponsorships, or ads. ","permalink":"https://roman.computer/finding_information/","summary":"Isn\u0026rsquo;t the internet such a magically useful tool? Thirty years ago, if you wanted to know how many plays Shakespeare wrote, you would have to physically walk to your local library and find a relevant book. Now, you can find the answer in less than ten seconds, at any time, wherever you are.\nHowever, the internet is not a truthful, superintelligent oracle. Rather, it\u0026rsquo;s a dangerous jungle of knowledge you must learn to navigate if you wish to find the truth.","title":"tools for finding information on the internet"}]